Beginning task setup

/usr/bin/flock
Using existing venv: /tmp/petrel-good-1-1474274379/venv
Task setup took 13 seconds
Launching: python -m petrel.run kafkaconsumer /home/pipe/topology/TopologyTweetTransformationGOOD/petrel7028_kafkaconsumer.log
/usr/local/lib/python2.7/dist-packages/petrel-1.0.1.0.3-py2.7.egg/petrel/run.py invoked with the following arguments: ['kafkaconsumer', '/home/pipe/topology/TopologyTweetTransformationGOOD/petrel7028_kafkaconsumer.log']
python version: 2.7.12
user=root
PATH=/tmp/petrel-good-1-1474274379/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
LD_LIBRARY_PATH=/home/apache-storm-1.0.1/data/supervisor/stormdist/good-1-1474274379/resources/Linux-amd64:/home/apache-storm-1.0.1/data/supervisor/stormdist/good-1-1474274379/resources:/usr/local/lib:/opt/local/lib:/usr/lib
PYTHON_EGG_CACHE=/tmp/petrel-good-1-1474274379/egg_cache
[2016-09-19 09:40:04,455][storm][INFO]Tuple profiling enabled. Will log tuple processing times.
[2016-09-19 09:40:04,697][storm][INFO]Task received setupInfo from Storm: {'pidDir': '/home/apache-storm-1.0.1/data/workers/6f92c875-9c41-4d33-bad2-7733f102d92e/pids', 'conf': {'storm.group.mapping.service.params': None, 'topology.tuple.serializer': 'org.apache.storm.serialization.types.ListDelegateSerializer', 'topology.workers': 1, 'drpc.worker.threads': 64, 'ui.filter.params': None, 'transactional.zookeeper.root': '/transactional', 'logviewer.cleanup.age.mins': 10080, 'worker.profiler.command': 'flight.bash', 'topology.executor.send.buffer.size': 1024, 'nimbus.file.copy.expiration.secs': 600, 'oauth.acess_token': ' 702208758362087425-HZiyl1x7Bh98cQa1WLBDYylyu10Bpl7', 'drpc.childopts': '-Xmx768m', 'nimbus.thrift.port': 6627, 'topology.disruptor.wait.timeout.millis': 1000, 'storm.zookeeper.retry.intervalceiling.millis': 30000, 'storm.local.dir': '/home/apache-storm-1.0.1/data', 'storm.auth.simple-acl.users': [], 'drpc.invocations.threads': 64, 'storm.zookeeper.superACL': None, 'storm.cluster.state.store': 'org.apache.storm.cluster_state.zookeeper_state_factory', 'storm.codedistributor.class': 'org.apache.storm.codedistributor.LocalFileSystemCodeDistributor', 'drpc.https.keystore.password': '', 'supervisor.blobstore.download.max_retries': 3, 'pacemaker.kerberos.users': [], 'storm.messaging.netty.client_worker_threads': 1, 'oauth.consumer_secret': 'ADf76fi3O1lKMzBxWnjqf93l3GHv28uar3bkblkvyBrAyoA23i', 'topology.component.resources.offheap.memory.mb': 0.0, 'supervisor.heartbeat.frequency.secs': 5, 'storm.group.mapping.service.cache.duration.secs': 120, 'storm.group.mapping.service': 'org.apache.storm.security.auth.ShellBasedGroupsMapping', 'storm.workers.artifacts.dir': 'workers-artifacts', 'drpc.request.timeout.secs': 600, 'pacemaker.childopts': '-Xmx1024m', 'nimbus.seeds': ['localhost'], 'topology.shellbolt.max.pending': 100, 'topology.min.replication.count': 1, 'topology.skip.missing.kryo.registrations': False, 'worker.heartbeat.frequency.secs': 1, 'storm.auth.simple-acl.users.commands': [], 'storm.zookepeer.port': 2181, 'zmq.hwm': 0, 'topology.worker.shared.thread.pool.size': 4, 'storm.zookeeper.connection.timeout': 15000, 'java.library.path': '/usr/local/lib:/opt/local/lib:/usr/lib', 'logviewer.max.sum.worker.logs.size.mb': 4096, 'task.refresh.poll.secs': 10, 'topology.max.error.report.per.interval': 5, 'topology.worker.logwriter.childopts': '-Xmx64m', 'ui.actions.enabled': True, 'storm.health.check.timeout.ms': 5000, 'topology.scheduler.strategy': 'org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy', 'ui.host': '0.0.0.0', 'storm.messaging.netty.server_worker_threads': 1, 'topology.disruptor.batch.size': 100, 'storm.id': 'good-1-1474274379', 'supervisor.worker.start.timeout.secs': 120, 'zmq.threads': 1, 'topology.acker.executors': None, 'pacemaker.thread.timeout': 10, 'storm.local.mode.zmq': False, 'topology.eventlogger.executors': 0, 'topology.tick.tuple.freq.secs': 30, 'supervisor.memory.capacity.mb': 3072.0, 'supervisor.worker.shutdown.sleep.secs': 1, 'pacemaker.base.threads': 10, 'drpc.http.creds.plugin': 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'storm.zookeeper.servers': ['localhost'], 'supervisor.localizer.cache.target.size.mb': 10240, 'storm.messaging.netty.transfer.batch.size': 262144, 'resource.aware.scheduler.eviction.strategy': 'org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy', 'topology.environment': None, 'storm.zookeeper.port': 2181, 'storm.auth.simple-acl.admins': [], 'pacemaker.host': 'localhost', 'nimbus.childopts': '-Xmx1024m', 'storm.principal.tolocal': 'org.apache.storm.security.auth.DefaultPrincipalToLocal', 'storm.nimbus.retry.times': 5, 'topology.classpath': None, 'drpc.authorizer.acl.filename': 'drpc-auth-acl.yaml', 'topology.bolts.outgoing.overflow.buffer.enable': False, 'nimbus.credential.renewers.freq.secs': 600, 'worker.childopts': '-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump', 'drpc.queue.size': 128, 'supervisor.blobstore.class': 'org.apache.storm.blobstore.NimbusBlobStore', 'topology.multilang.serializer': 'org.apache.storm.multilang.JsonSerializer', 'storm.zookeeper.retry.times': 5, 'topology.disable.loadaware': False, 'supervisor.run.worker.as.user': False, 'storm.blobstore.replication.factor': 3, 'worker.profiler.childopts': '-XX:+UnlockCommercialFeatures -XX:+FlightRecorder', 'nimbus.thrift.threads': 64, 'nimbus.monitor.freq.secs': 10, 'storm.blobstore.inputstream.buffer.size.bytes': 65536, 'dev.zookeeper.path': '/tmp/dev-storm-zookeeper', 'topology.users': [], 'storm.daemon.metrics.reporter.plugins': ['org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter'], 'storm.exhibitor.poll.uripath': '/exhibitor/v1/cluster/list', 'pacemaker.max.threads': 50, 'drpc.https.keystore.type': 'JKS', 'topology.tasks': None, 'storm.zookeeper.root': '/storm', 'logviewer.childopts': '-Xmx128m', 'topology.max.replication.wait.time.sec': 60, 'worker.gc.childopts': '', 'backpressure.disruptor.low.watermark': 0.4, 'storm.meta.serialization.delegate': 'org.apache.storm.serialization.GzipThriftSerializationDelegate', 'transactional.zookeeper.port': None, 'drpc.max_buffer_size': 1048576, 'topology.worker.childopts': None, 'storm.auth.simple-white-list.users': [], 'topology.max.spout.pending': None, 'nimbus.topology.validator': 'org.apache.storm.nimbus.DefaultTopologyValidator', 'topology.kryo.register': None, 'petrel.host': 'localhost', 'client.blobstore.class': 'org.apache.storm.blobstore.NimbusBlobStore', 'nimbus.cleanup.inbox.freq.secs': 600, 'storm.nimbus.retry.intervalceiling.millis': 60000, 'storm.network.topography.plugin': 'org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping', 'storm.messaging.netty.min_wait_ms': 100, 'nimbus.task.timeout.secs': 30, 'topology.disruptor.batch.timeout.millis': 1, 'topology.state.checkpoint.interval.ms': 1000, 'ui.header.buffer.bytes': 4096, 'nimbus.thrift.max_buffer_size': 1048576, 'ui.http.creds.plugin': 'org.apache.storm.security.auth.DefaultHttpCredentialsPlugin', 'topology.sleep.spout.wait.strategy.time.ms': 1, 'nimbus.blobstore.expiration.secs': 600, 'storm.cluster.mode': 'distributed', 'storm.messaging.netty.socket.backlog': 500, 'worker.profiler.enabled': False, 'nimbus.queue.size': 100000, 'logviewer.appender.name': 'A1', 'drpc.authorizer.acl.strict': False, 'ui.port': 8080, 'supervisor.slots.ports': [6700, 6701, 6702, 6703], 'worker.log.level.reset.poll.secs': 30, 'storm.nimbus.retry.interval.millis': 2000, 'drpc.invocations.port': 3773, 'supervisor.monitor.frequency.secs': 3, 'ui.childopts': '-Xmx768m', 'transactional.zookeeper.servers': None, 'storm.log4j2.conf.dir': 'log4j2', 'supervisor.supervisors': [], 'zmq.linger.millis': 5000, 'topology.error.throttle.interval.secs': 10, 'storm.health.check.dir': 'healthchecks', 'topology.executor.receive.buffer.size': 1024, 'nimbus.impersonation.authorizer': 'org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer', 'topology.submitter.principal': '', 'topology.worker.max.heap.size.mb': 768.0, 'topology.spout.wait.strategy': 'org.apache.storm.spout.SleepSpoutWaitStrategy', 'task.heartbeat.frequency.secs': 3, 'topology.transfer.buffer.size': 1024, 'storm.zookeeper.session.timeout': 20000, 'topology.testing.always.try.serialize': False, 'nimbus.blobstore.class': 'org.apache.storm.blobstore.LocalFsBlobStore', 'topology.stats.sample.rate': 0.05, 'topology.fall.back.on.java.serialization': True, 'storm.exhibitor.port': 8080, 'storm.zookeeper.auth.password': None, 'supervisor.childopts': '-Xmx256m', 'topology.backpressure.enable': True, 'pacemaker.port': 6699, 'topology.enable.message.timeouts': True, 'nimbus.code.sync.freq.secs': 120, 'backpressure.disruptor.high.watermark': 0.9, 'storm.messaging.netty.max_wait_ms': 1000, 'topology.worker.receiver.thread.count': 1, 'topology.component.resources.onheap.memory.mb': 128.0, 'resource.aware.scheduler.priority.strategy': 'org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy', 'nimbus.supervisor.timeout.secs': 60, 'pacemaker.auth.method': 'NONE', 'drpc.https.port': -1, 'nimbus.inbox.jar.expiration.secs': 3600, 'scheduler.display.resource': False, 'topology.kryo.factory': 'org.apache.storm.serialization.DefaultKryoFactory', 'storm.zookeeper.retry.interval': 1000, 'supervisor.supervisors.commands': [], 'supervisor.localizer.cleanup.interval.ms': 600000, 'storm.messaging.netty.max_retries': 300, 'task.credentials.poll.secs': 30, 'drpc.http.port': 3774, 'storm.messaging.transport': 'org.apache.storm.messaging.netty.Context', 'supervisor.enable': True, 'nimbus.task.launch.secs': 120, 'supervisor.blobstore.download.thread.count': 5, 'topology.message.timeout.secs': 30, 'oauth.acess_token_secret': 'IiNOTfgE3tEZvW2HDQhRKPMoOLU43NXJCXk8maj51SdAT', 'storm.messaging.netty.authentication': False, 'petrel.user': 'pipe', 'drpc.port': 3772, 'storm.messaging.netty.buffer_size': 5242880, 'topology.state.synchronization.timeout.secs': 60, 'worker.heap.memory.mb': 768, 'topology.name': 'good', 'topology.priority': 29, 'supervisor.worker.timeout.secs': 30, 'ui.filter': None, 'topology.trident.batch.emit.interval.millis': 500, 'topology.max.task.parallelism': None, 'supervisor.cpu.capacity': 400.0, 'topology.submitter.user': 'root', 'logviewer.max.per.worker.logs.size.mb': 2048, 'nimbus.host': 'localhost', 'topology.builtin.metrics.bucket.size.secs': 60, 'topology.component.cpu.pcore.percent': 10.0, 'ui.users': None, 'storm.thrift.transport': 'org.apache.storm.security.auth.SimpleTransportPlugin', 'logs.users': None, 'logviewer.port': 8000, 'oauth.consumer_key': 'eaFmBSxUveRJfmyZYeabti9Q9', 'topology.kryo.decorators': [], 'topology.debug': False, 'storm.zookeeper.auth.user': None}, 'context': {'task->component': {'11': '__acker', '10': 'WordDivider', '1': 'CountThreeWords', '3': 'CountTwoWords', '2': 'CountThreeWords', '5': 'CountWord', '4': 'CountTwoWords', '7': 'KafkaConsumer', '6': 'CountWord', '9': 'TwoWordDivider', '8': 'ThreeWordDivider'}, 'stream->target->grouping': {'default': {'WordDivider': {'type': 'SHUFFLE'}, 'ThreeWordDivider': {'type': 'SHUFFLE'}, 'TwoWordDivider': {'type': 'SHUFFLE'}}}, 'source->stream->fields': {}, 'streams': ['default'], 'stream->outputfields': {'default': ['sentence', 'user']}, 'taskid': 7, 'source->stream->grouping': {}, 'componentid': 'KafkaConsumer'}}
[2016-09-19 09:40:04,718][storm][INFO]Task sent pid to Storm
[2016-09-19 09:40:04,844][kafka.conn][INFO]Broker version identifed as 0.10
[2016-09-19 09:40:04,844][kafka.conn][INFO]Set configuration api_version=(0, 10) to skip auto check_version requests on startup
[2016-09-19 09:40:04,854][kafka.consumer.subscription_state][INFO]Updating subscribed topics to: ['goodtopic']
[2016-09-19 09:40:08,682][kafka.cluster][INFO]Group coordinator for kafka-python-default-group is BrokerMetadata(nodeId=0, host=u'localhost', port=9092, rack=None)
[2016-09-19 09:40:08,682][kafka.coordinator][INFO]Discovered coordinator 0 for group kafka-python-default-group
[2016-09-19 09:40:08,682][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([]) for group kafka-python-default-group
[2016-09-19 09:40:08,682][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:08,706][kafka.coordinator][WARNING]Marking the coordinator dead (node 0) for group kafka-python-default-group: None.
[2016-09-19 09:40:08,811][kafka.cluster][INFO]Group coordinator for kafka-python-default-group is BrokerMetadata(nodeId=0, host=u'localhost', port=9092, rack=None)
[2016-09-19 09:40:08,811][kafka.coordinator][INFO]Discovered coordinator 0 for group kafka-python-default-group
[2016-09-19 09:40:08,812][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:08,832][kafka.coordinator][WARNING]Marking the coordinator dead (node 0) for group kafka-python-default-group: None.
[2016-09-19 09:40:08,934][kafka.cluster][INFO]Group coordinator for kafka-python-default-group is BrokerMetadata(nodeId=0, host=u'localhost', port=9092, rack=None)
[2016-09-19 09:40:08,934][kafka.coordinator][INFO]Discovered coordinator 0 for group kafka-python-default-group
[2016-09-19 09:40:08,937][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:08,952][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 1) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:40:08,952][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:40:09,003][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 1
[2016-09-19 09:40:09,004][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:40:09,004][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:15,121][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:40:15,121][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:40:15,223][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:40:15,625][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:15,625][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:15,629][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 2) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:40:15,629][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:40:15,630][kafka.coordinator.assignors.range][WARNING]No partition metadata for topic badtopic
[2016-09-19 09:40:15,636][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 2
[2016-09-19 09:40:15,636][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:40:15,636][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:16,244][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:16,245][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:18,640][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:40:18,745][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 3) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:40:18,745][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:40:18,749][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 3
[2016-09-19 09:40:18,749][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:40:18,749][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:36,852][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:40:36,853][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:40:36,954][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:40:37,357][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:37,357][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:37,367][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 4) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:40:37,368][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:40:37,368][kafka.coordinator.assignors.range][WARNING]No partition metadata for topic spamtopic
[2016-09-19 09:40:37,371][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 4
[2016-09-19 09:40:37,372][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:40:37,372][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:37,979][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:40:37,979][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:40:40,375][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:40:40,899][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 5) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:40:40,899][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:40:40,903][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 5
[2016-09-19 09:40:40,909][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:40:40,909][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:42:35,154][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:42:35,155][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:42:35,256][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:42:35,657][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:42:35,657][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:42:56,122][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 6) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:42:56,122][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:42:56,123][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:42:56,126][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 6
[2016-09-19 09:42:56,127][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:42:56,127][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:42:59,648][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 7) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:42:59,648][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:42:59,652][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 7
[2016-09-19 09:42:59,653][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:42:59,653][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:43:03,171][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 8) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:43:03,171][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:43:03,172][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:43:03,173][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 8
[2016-09-19 09:43:03,174][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:43:03,174][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:43:03,780][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:43:03,780][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:43:06,177][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:43:06,695][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 9) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:43:06,696][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:43:06,698][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 9
[2016-09-19 09:43:06,699][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:43:06,699][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:43:07,305][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:43:07,305][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:43:09,701][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:43:10,220][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 10) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:43:10,220][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:43:10,223][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 10
[2016-09-19 09:43:10,223][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:43:10,224][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:47:49,425][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:47:49,426][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:47:49,527][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:47:49,928][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:47:49,928][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:10,385][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 11) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:10,385][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:10,387][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:48:10,389][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 11
[2016-09-19 09:48:10,390][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:10,392][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:13,912][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 12) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:13,912][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:13,914][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 12
[2016-09-19 09:48:13,915][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:13,916][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:17,432][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 13) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:17,432][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:17,433][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:48:17,433][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 13
[2016-09-19 09:48:17,434][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:48:17,434][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:18,038][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:18,038][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:20,437][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:20,952][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 14) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:20,952][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:20,954][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 14
[2016-09-19 09:48:20,955][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:20,955][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:24,471][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 15) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:24,471][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:24,472][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:48:24,473][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 15
[2016-09-19 09:48:24,473][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:48:24,473][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:25,078][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:25,078][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:27,474][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:27,991][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 16) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:27,991][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:27,993][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 16
[2016-09-19 09:48:27,993][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:48:27,994][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:28,600][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:48:28,600][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:48:30,997][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:48:31,513][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 17) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:48:31,513][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:48:31,515][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 17
[2016-09-19 09:48:31,515][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:48:31,516][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:52:59,083][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:52:59,083][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:52:59,185][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:52:59,585][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:52:59,585][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:53:23,029][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 18) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:53:23,029][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:53:23,030][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:53:23,036][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 18
[2016-09-19 09:53:23,036][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:53:23,036][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:53:23,641][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:53:23,641][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:53:26,039][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:53:26,551][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 19) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:53:26,551][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:53:26,553][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 19
[2016-09-19 09:53:26,553][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:53:26,553][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:53:27,158][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:53:27,159][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:53:29,555][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:53:30,069][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 20) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:53:30,070][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:53:30,071][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 20
[2016-09-19 09:53:30,072][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:53:30,072][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:12,267][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 09:58:12,267][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 09:58:12,368][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:12,769][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:12,770][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:33,565][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 21) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:33,566][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:33,567][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:58:33,568][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 21
[2016-09-19 09:58:33,568][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:33,569][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:37,087][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 22) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:37,087][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:37,089][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 22
[2016-09-19 09:58:37,089][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:37,090][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:40,605][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 23) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:40,606][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:40,607][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:58:40,608][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 23
[2016-09-19 09:58:40,609][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:40,609][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:44,125][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 24) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:44,125][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:44,128][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 24
[2016-09-19 09:58:44,128][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:44,129][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:47,644][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 25) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:47,644][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:47,645][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:58:47,646][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 25
[2016-09-19 09:58:47,647][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:58:47,647][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:48,251][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:48,251][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:50,650][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:51,164][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 26) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:51,164][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:51,166][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 26
[2016-09-19 09:58:51,167][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:51,167][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:54,683][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 27) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:54,684][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:54,685][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:58:54,685][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 27
[2016-09-19 09:58:54,686][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:58:54,686][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:55,292][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:58:55,292][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:57,689][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:58:58,202][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 28) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:58:58,202][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:58:58,204][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 28
[2016-09-19 09:58:58,205][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:58:58,206][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:01,723][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 29) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:01,723][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:01,724][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:01,726][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 29
[2016-09-19 09:59:01,727][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:01,727][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:05,243][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 30) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:05,243][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:05,245][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 30
[2016-09-19 09:59:05,246][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:05,247][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:08,767][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 31) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:08,767][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:08,768][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:08,768][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 31
[2016-09-19 09:59:08,769][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:08,769][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:09,373][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:09,373][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:11,772][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:12,284][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 32) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:12,284][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:12,286][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 32
[2016-09-19 09:59:12,287][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:12,287][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:15,803][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 33) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:15,804][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:15,805][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:15,806][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 33
[2016-09-19 09:59:15,806][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:15,806][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:16,409][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:16,410][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:18,809][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:19,334][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 34) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:19,334][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:19,336][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 34
[2016-09-19 09:59:19,337][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:19,339][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:22,855][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 35) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:22,855][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:22,856][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:22,857][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 35
[2016-09-19 09:59:22,857][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:22,857][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:23,461][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:23,461][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:25,858][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:26,375][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 36) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:26,375][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:26,377][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 36
[2016-09-19 09:59:26,377][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:26,378][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:29,895][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 37) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:29,895][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:29,896][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:29,897][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 37
[2016-09-19 09:59:29,897][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:29,898][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:30,502][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:30,502][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:32,901][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:33,412][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 38) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:33,412][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:33,415][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 38
[2016-09-19 09:59:33,415][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:33,416][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:36,931][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 39) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:36,931][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:36,932][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:36,933][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 39
[2016-09-19 09:59:36,934][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:36,934][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:40,451][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 40) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:40,451][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:40,453][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 40
[2016-09-19 09:59:40,454][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:40,454][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:43,969][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 41) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:43,969][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:43,970][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:43,980][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 41
[2016-09-19 09:59:43,980][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:43,980][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:44,585][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:44,585][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:46,983][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:47,497][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 42) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:47,497][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:47,499][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 42
[2016-09-19 09:59:47,499][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:47,499][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:51,015][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 43) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:51,015][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:51,016][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:51,017][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 43
[2016-09-19 09:59:51,017][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 09:59:51,017][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:51,622][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 09:59:51,622][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:54,020][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:54,535][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 44) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:54,535][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:54,538][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 44
[2016-09-19 09:59:54,539][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:54,540][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 09:59:58,055][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 45) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 09:59:58,055][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 09:59:58,056][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 09:59:58,057][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 45
[2016-09-19 09:59:58,058][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 09:59:58,058][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:00:01,583][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 46) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:00:01,583][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:00:01,585][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 46
[2016-09-19 10:00:01,585][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:00:01,586][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:00:05,102][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 47) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:00:05,102][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:00:05,103][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:00:05,104][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 47
[2016-09-19 10:00:05,105][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:00:05,105][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:00:08,621][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 48) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:00:08,621][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:00:08,623][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 48
[2016-09-19 10:00:08,623][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:00:08,623][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:00:09,328][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:00:09,328][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:00:11,626][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:00:12,139][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 49) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:00:12,140][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:00:12,141][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 49
[2016-09-19 10:00:12,142][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:00:12,142][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:03:24,377][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:03:24,377][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:03:24,479][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:03:24,880][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:03:24,880][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:03:45,278][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 50) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:03:45,278][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:03:45,279][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:03:45,280][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 50
[2016-09-19 10:03:45,281][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:03:45,281][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:03:48,800][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 51) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:03:48,800][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:03:48,802][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 51
[2016-09-19 10:03:48,803][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:03:48,803][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:03:49,508][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:03:49,508][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:03:51,806][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:03:52,319][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 52) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:03:52,319][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:03:52,321][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 52
[2016-09-19 10:03:52,322][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:03:52,322][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:08:37,794][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:08:37,794][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:08:37,895][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:08:38,296][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:08:38,297][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:08:58,757][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 53) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:08:58,757][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:08:58,758][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:08:58,759][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 53
[2016-09-19 10:08:58,759][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:08:58,760][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:09:02,275][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 54) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:09:02,275][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:09:02,277][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 54
[2016-09-19 10:09:02,277][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:09:02,277][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:09:02,882][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:09:02,882][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:09:05,280][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:09:05,793][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 55) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:09:05,793][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:09:05,795][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 55
[2016-09-19 10:09:05,796][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:09:05,796][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:13:48,244][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:13:48,245][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:13:48,346][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:13:48,747][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:13:48,747][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:09,221][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 56) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:09,221][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:09,222][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:09,223][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 56
[2016-09-19 10:14:09,223][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:09,224][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:12,739][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 57) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:12,739][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:12,741][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 57
[2016-09-19 10:14:12,742][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:12,742][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:16,258][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 58) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:16,258][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:16,259][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:16,260][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 58
[2016-09-19 10:14:16,260][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:14:16,260][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:14:16,864][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:14:16,865][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:19,263][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:19,776][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 59) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:19,776][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:19,778][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 59
[2016-09-19 10:14:19,778][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:19,779][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:23,294][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 60) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:23,295][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:23,296][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:23,296][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 60
[2016-09-19 10:14:23,297][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:23,298][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:26,812][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 61) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:26,812][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:26,815][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 61
[2016-09-19 10:14:26,816][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:26,816][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:30,328][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 62) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:30,328][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:30,329][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:30,330][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 62
[2016-09-19 10:14:30,330][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:30,331][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:33,847][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 63) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:33,847][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:33,849][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 63
[2016-09-19 10:14:33,850][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:33,850][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:37,367][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 64) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:37,367][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:37,368][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:37,369][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 64
[2016-09-19 10:14:37,369][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:37,370][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:40,885][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 65) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:40,885][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:40,888][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 65
[2016-09-19 10:14:40,888][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:40,889][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:44,417][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 66) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:44,417][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:44,419][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:44,419][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 66
[2016-09-19 10:14:44,420][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:44,420][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:47,940][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 67) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:47,940][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:47,942][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 67
[2016-09-19 10:14:47,942][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:47,943][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:51,459][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 68) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:51,459][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:51,460][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:51,461][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 68
[2016-09-19 10:14:51,462][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:51,462][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:54,978][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 69) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:54,978][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:54,980][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 69
[2016-09-19 10:14:54,981][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:54,981][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:14:58,498][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 70) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:14:58,499][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:14:58,500][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:14:58,501][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 70
[2016-09-19 10:14:58,501][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:14:58,502][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:15:02,018][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 71) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:15:02,018][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:15:02,020][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 71
[2016-09-19 10:15:02,021][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:15:02,021][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:15:05,538][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 72) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:15:05,538][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:15:05,539][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:15:05,540][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 72
[2016-09-19 10:15:05,540][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:15:05,540][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:15:06,144][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:15:06,144][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:15:08,542][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:15:09,057][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 73) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:15:09,057][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:15:09,059][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 73
[2016-09-19 10:15:09,059][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:15:09,059][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:15:09,764][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:15:09,764][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:15:12,062][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:15:12,576][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 74) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:15:12,576][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:15:12,578][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 74
[2016-09-19 10:15:12,579][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:15:12,579][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:19:00,838][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:19:00,838][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:19:00,939][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:19:01,340][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:19:01,341][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:19:23,311][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 75) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:19:23,312][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:19:23,313][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:19:23,314][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 75
[2016-09-19 10:19:23,315][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:19:23,315][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:19:26,831][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 76) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:19:26,832][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:19:26,833][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 76
[2016-09-19 10:19:26,833][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:19:26,834][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:19:27,539][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:19:27,539][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:19:29,837][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:19:30,349][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 77) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:19:30,349][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:19:30,351][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 77
[2016-09-19 10:19:30,352][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:19:30,352][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:12,774][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:24:12,774][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:24:12,876][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:13,276][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:13,277][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:33,742][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 78) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:33,742][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:33,743][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:24:33,744][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 78
[2016-09-19 10:24:33,744][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:33,745][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:37,261][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 79) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:37,261][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:37,263][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 79
[2016-09-19 10:24:37,264][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:37,264][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:40,780][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 80) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:40,780][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:40,781][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:24:40,782][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 80
[2016-09-19 10:24:40,782][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:24:40,782][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:41,486][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:41,486][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:43,785][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:44,300][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 81) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:44,300][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:44,302][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 81
[2016-09-19 10:24:44,303][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:44,303][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:47,817][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 82) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:47,817][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:47,818][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:24:47,819][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 82
[2016-09-19 10:24:47,820][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:47,820][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:51,336][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 83) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:51,336][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:51,341][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 83
[2016-09-19 10:24:51,341][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:51,342][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:54,854][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 84) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:54,854][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:54,855][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:24:54,857][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 84
[2016-09-19 10:24:54,858][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:24:54,858][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:24:58,374][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 85) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:24:58,374][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:24:58,376][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 85
[2016-09-19 10:24:58,376][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:24:58,376][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:58,980][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:24:58,980][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:25:01,377][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:25:01,892][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 86) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:25:01,892][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:25:01,894][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 86
[2016-09-19 10:25:01,895][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:25:01,895][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:29:26,277][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:29:26,277][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:29:26,378][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:29:26,780][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:29:26,780][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:29:47,248][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 87) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:29:47,248][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:29:47,249][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:29:47,250][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 87
[2016-09-19 10:29:47,251][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:29:47,251][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:29:50,768][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 88) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:29:50,768][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:29:50,770][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 88
[2016-09-19 10:29:50,771][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:29:50,771][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:29:54,286][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 89) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:29:54,286][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:29:54,288][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:29:54,289][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 89
[2016-09-19 10:29:54,289][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:29:54,290][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:29:57,804][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 90) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:29:57,804][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:29:57,806][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 90
[2016-09-19 10:29:57,807][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:29:57,807][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:01,323][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 91) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:01,323][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:01,324][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:01,325][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 91
[2016-09-19 10:30:01,325][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:01,326][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:04,845][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 92) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:04,845][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:04,847][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 92
[2016-09-19 10:30:04,847][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:04,850][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:08,363][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 93) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:08,363][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:08,364][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:08,365][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 93
[2016-09-19 10:30:08,366][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:08,366][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:11,880][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 94) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:11,880][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:11,882][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 94
[2016-09-19 10:30:11,883][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:11,883][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:15,399][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 95) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:15,399][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:15,400][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:15,401][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 95
[2016-09-19 10:30:15,401][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:15,402][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:18,919][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 96) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:18,920][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:18,921][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 96
[2016-09-19 10:30:18,922][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:18,923][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:22,442][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 97) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:22,443][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:22,444][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:22,445][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 97
[2016-09-19 10:30:22,445][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:22,446][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:25,960][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 98) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:25,960][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:25,965][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 98
[2016-09-19 10:30:25,966][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:25,967][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:29,480][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 99) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:29,480][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:29,481][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:29,482][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 99
[2016-09-19 10:30:29,482][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:29,483][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:32,997][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 100) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:32,997][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:32,999][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 100
[2016-09-19 10:30:33,000][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:33,000][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:36,514][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 101) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:36,514][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:36,516][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:36,516][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 101
[2016-09-19 10:30:36,517][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:30:36,517][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:37,221][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:37,221][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:39,520][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:40,032][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 102) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:40,032][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:40,034][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 102
[2016-09-19 10:30:40,035][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:40,035][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:43,550][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 103) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:43,550][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:43,551][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:43,552][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 103
[2016-09-19 10:30:43,552][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:30:43,552][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:44,257][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:44,257][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:46,556][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:47,066][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 104) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:47,066][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:47,068][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 104
[2016-09-19 10:30:47,069][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:47,069][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:50,582][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 105) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:50,582][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:50,584][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:50,584][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 105
[2016-09-19 10:30:50,585][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:50,585][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:54,100][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 106) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:54,100][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:54,101][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 106
[2016-09-19 10:30:54,102][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:30:54,102][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:30:57,618][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 107) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:30:57,618][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:30:57,619][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:30:57,620][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 107
[2016-09-19 10:30:57,620][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:30:57,620][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:58,324][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:30:58,324][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:00,622][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:01,147][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 108) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:01,148][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:01,149][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 108
[2016-09-19 10:31:01,150][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:01,150][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:04,664][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 109) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:04,665][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:04,666][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:04,667][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 109
[2016-09-19 10:31:04,667][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:04,668][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:08,182][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 110) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:08,182][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:08,184][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 110
[2016-09-19 10:31:08,184][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:08,185][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:11,701][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 111) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:11,701][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:11,702][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:11,703][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 111
[2016-09-19 10:31:11,704][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:11,704][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:15,223][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 112) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:15,223][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:15,225][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 112
[2016-09-19 10:31:15,226][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:15,226][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:18,741][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 113) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:18,742][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:18,743][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:18,744][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 113
[2016-09-19 10:31:18,744][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:18,745][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:22,257][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 114) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:22,257][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:22,259][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 114
[2016-09-19 10:31:22,259][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:22,260][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:25,775][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 115) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:25,775][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:25,776][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:25,777][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 115
[2016-09-19 10:31:25,778][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:25,778][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:29,302][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 116) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:29,302][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:29,305][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 116
[2016-09-19 10:31:29,306][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:29,306][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:32,820][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 117) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:32,821][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:32,822][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:32,823][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 117
[2016-09-19 10:31:32,823][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:32,824][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:36,344][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 118) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:36,344][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:36,347][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 118
[2016-09-19 10:31:36,348][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:36,348][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:39,862][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 119) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:39,862][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:39,863][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:39,864][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 119
[2016-09-19 10:31:39,865][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:39,865][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:43,379][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 120) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:43,380][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:43,381][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 120
[2016-09-19 10:31:43,382][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:43,383][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:46,905][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 121) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:46,905][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:46,907][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:46,907][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 121
[2016-09-19 10:31:46,908][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:31:46,908][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:31:47,613][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:31:47,613][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:49,911][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:50,423][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 122) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:50,424][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:50,426][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 122
[2016-09-19 10:31:50,426][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:50,427][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:53,943][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 123) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:53,944][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:53,945][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:31:53,946][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 123
[2016-09-19 10:31:53,946][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:31:53,946][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:31:54,651][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:31:54,651][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:56,947][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:31:57,462][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 124) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:31:57,463][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:31:57,465][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 124
[2016-09-19 10:31:57,465][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:31:57,468][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:32:00,982][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 125) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:32:00,982][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:32:00,983][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:32:00,984][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 125
[2016-09-19 10:32:00,985][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:32:00,985][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:32:04,501][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 126) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:32:04,502][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:32:04,503][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 126
[2016-09-19 10:32:04,504][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:32:04,505][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:32:08,020][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 127) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:32:08,020][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:32:08,021][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:32:08,022][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 127
[2016-09-19 10:32:08,022][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:32:08,022][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:32:08,626][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:32:08,626][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:32:11,024][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:32:11,539][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 128) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:32:11,539][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:32:11,541][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 128
[2016-09-19 10:32:11,542][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:32:11,542][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:32:12,246][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:32:12,246][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:32:14,545][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:32:15,063][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 129) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:32:15,063][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:32:15,065][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 129
[2016-09-19 10:32:15,065][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:32:15,066][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:34:36,544][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:34:36,544][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:34:36,646][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:34:37,047][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:34:37,047][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:34:57,525][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 130) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:34:57,525][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:34:57,526][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:34:57,527][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 130
[2016-09-19 10:34:57,528][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:34:57,528][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:01,045][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 131) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:01,045][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:01,047][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 131
[2016-09-19 10:35:01,048][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:01,048][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:04,564][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 132) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:04,564][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:04,565][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:04,566][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 132
[2016-09-19 10:35:04,567][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:04,567][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:08,082][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 133) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:08,083][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:08,085][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 133
[2016-09-19 10:35:08,085][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:08,086][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:11,600][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 134) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:11,600][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:11,601][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:11,602][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 134
[2016-09-19 10:35:11,603][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:11,603][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:15,117][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 135) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:15,118][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:15,119][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 135
[2016-09-19 10:35:15,120][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:15,121][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:18,634][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 136) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:18,634][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:18,635][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:18,636][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 136
[2016-09-19 10:35:18,637][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:18,637][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:22,154][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 137) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:22,154][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:22,156][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 137
[2016-09-19 10:35:22,157][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:22,157][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:25,672][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 138) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:25,672][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:25,673][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:25,674][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 138
[2016-09-19 10:35:25,674][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:25,675][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:29,191][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 139) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:29,191][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:29,193][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 139
[2016-09-19 10:35:29,193][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:29,194][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:32,709][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 140) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:32,709][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:32,710][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:32,714][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 140
[2016-09-19 10:35:32,715][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:32,716][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:36,226][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 141) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:36,226][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:36,228][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 141
[2016-09-19 10:35:36,228][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:36,229][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:39,741][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 142) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:39,741][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:39,742][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:39,743][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 142
[2016-09-19 10:35:39,743][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:39,744][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:43,258][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 143) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:43,258][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:43,260][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 143
[2016-09-19 10:35:43,261][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:43,261][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:46,776][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 144) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:46,777][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:46,778][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:46,778][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 144
[2016-09-19 10:35:46,779][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:46,779][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:50,293][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 145) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:50,293][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:50,294][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 145
[2016-09-19 10:35:50,295][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:50,296][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:53,811][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 146) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:53,811][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:53,812][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:35:53,813][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 146
[2016-09-19 10:35:53,814][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:53,814][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:35:57,329][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 147) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:35:57,329][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:35:57,331][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 147
[2016-09-19 10:35:57,332][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:35:57,332][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:00,848][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 148) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:00,848][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:00,849][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:00,850][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 148
[2016-09-19 10:36:00,850][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:00,851][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:04,365][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 149) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:04,366][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:04,368][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 149
[2016-09-19 10:36:04,368][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:04,369][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:07,883][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 150) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:07,884][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:07,885][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:07,886][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 150
[2016-09-19 10:36:07,886][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:36:07,886][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:08,591][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:08,591][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:10,889][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:11,402][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 151) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:11,402][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:11,404][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 151
[2016-09-19 10:36:11,405][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:11,405][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:14,920][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 152) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:14,920][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:14,921][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:14,922][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 152
[2016-09-19 10:36:14,923][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:14,923][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:18,439][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 153) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:18,439][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:18,440][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 153
[2016-09-19 10:36:18,441][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:18,442][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:21,956][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 154) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:21,956][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:21,957][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:21,958][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 154
[2016-09-19 10:36:21,959][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:21,960][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:25,474][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 155) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:25,475][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:25,476][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 155
[2016-09-19 10:36:25,477][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:25,478][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:28,992][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 156) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:28,992][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:28,994][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:28,995][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 156
[2016-09-19 10:36:28,995][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:36:28,995][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:29,699][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:29,699][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:31,998][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:32,517][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 157) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:32,517][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:32,519][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 157
[2016-09-19 10:36:32,520][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:32,520][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:36,035][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 158) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:36,035][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:36,036][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:36,037][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 158
[2016-09-19 10:36:36,038][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:36,038][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:39,552][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 159) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:39,552][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:39,554][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 159
[2016-09-19 10:36:39,555][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:39,555][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:43,119][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 160) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:43,119][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:43,126][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:36:43,126][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 160
[2016-09-19 10:36:43,127][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:36:43,127][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:43,831][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:43,831][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:46,130][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:46,667][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 161) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:46,668][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:46,669][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 161
[2016-09-19 10:36:46,670][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:36:46,670][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:47,274][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:36:47,274][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:36:49,672][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:36:50,184][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 162) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:36:50,184][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:36:50,186][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 162
[2016-09-19 10:36:50,187][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:36:50,187][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:39:47,257][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:39:47,257][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:39:47,358][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:39:47,759][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:39:47,759][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:10,737][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 163) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:10,738][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:10,739][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:10,740][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 163
[2016-09-19 10:40:10,740][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:10,741][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:14,254][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 164) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:14,254][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:14,255][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 164
[2016-09-19 10:40:14,256][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:14,257][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:17,772][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 165) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:17,772][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:17,773][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:17,774][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 165
[2016-09-19 10:40:17,775][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:17,775][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:21,290][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 166) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:21,290][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:21,292][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 166
[2016-09-19 10:40:21,293][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:21,293][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:24,805][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 167) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:24,806][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:24,807][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:24,808][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 167
[2016-09-19 10:40:24,808][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:24,809][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:28,323][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 168) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:28,324][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:28,325][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 168
[2016-09-19 10:40:28,326][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:28,326][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:31,842][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 169) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:31,842][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:31,843][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:31,844][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 169
[2016-09-19 10:40:31,844][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:31,845][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:35,359][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 170) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:35,359][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:35,361][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 170
[2016-09-19 10:40:35,362][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:35,362][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:38,878][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 171) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:38,878][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:38,879][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:38,880][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 171
[2016-09-19 10:40:38,881][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:38,882][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:42,397][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 172) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:42,397][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:42,398][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 172
[2016-09-19 10:40:42,399][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:42,400][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:45,914][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 173) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:45,914][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:45,915][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:45,916][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 173
[2016-09-19 10:40:45,916][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:45,917][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:49,433][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 174) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:49,433][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:49,435][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 174
[2016-09-19 10:40:49,435][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:49,436][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:52,951][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 175) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:52,952][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:52,953][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:52,953][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 175
[2016-09-19 10:40:52,954][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:52,955][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:56,470][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 176) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:56,470][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:56,472][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 176
[2016-09-19 10:40:56,472][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:40:56,473][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:40:59,988][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 177) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:40:59,989][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:40:59,990][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:40:59,991][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 177
[2016-09-19 10:40:59,991][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:40:59,991][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:00,696][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:00,696][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:02,992][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:03,504][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 178) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:03,505][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:03,506][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 178
[2016-09-19 10:41:03,507][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:03,507][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:07,022][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 179) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:07,022][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:07,023][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:41:07,024][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 179
[2016-09-19 10:41:07,025][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:07,026][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:10,541][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 180) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:10,541][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:10,543][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 180
[2016-09-19 10:41:10,543][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:10,544][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:14,059][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 181) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:14,059][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:14,060][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:41:14,061][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 181
[2016-09-19 10:41:14,062][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:14,062][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:17,577][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 182) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:17,577][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:17,579][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 182
[2016-09-19 10:41:17,580][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:17,580][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:21,095][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 183) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:21,096][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:21,097][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:41:21,097][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 183
[2016-09-19 10:41:21,097][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:41:21,097][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:21,802][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:21,802][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:24,100][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:24,612][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 184) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:24,612][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:24,614][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 184
[2016-09-19 10:41:24,614][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:24,615][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:28,130][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 185) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:28,130][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:28,131][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:41:28,132][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 185
[2016-09-19 10:41:28,133][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:28,133][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:31,648][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 186) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:31,648][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:31,650][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 186
[2016-09-19 10:41:31,650][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:41:31,650][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:32,354][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:41:32,354][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:41:34,652][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:41:35,170][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 187) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:41:35,170][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:41:35,172][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 187
[2016-09-19 10:41:35,172][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:41:35,173][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:44:59,341][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:44:59,341][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:44:59,442][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:44:59,843][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:44:59,843][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:23,326][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 188) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:23,326][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:23,327][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:23,328][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 188
[2016-09-19 10:45:23,329][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:23,329][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:26,844][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 189) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:26,844][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:26,846][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 189
[2016-09-19 10:45:26,846][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:26,847][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:30,362][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 190) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:30,362][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:30,363][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:30,364][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 190
[2016-09-19 10:45:30,365][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:30,365][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:33,879][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 191) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:33,879][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:33,881][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 191
[2016-09-19 10:45:33,882][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:33,882][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:37,397][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 192) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:37,397][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:37,398][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:37,399][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 192
[2016-09-19 10:45:37,399][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:45:37,399][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:45:38,003][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:45:38,003][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:40,401][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:40,915][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 193) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:40,915][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:40,917][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 193
[2016-09-19 10:45:40,918][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:40,918][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:44,434][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 194) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:44,435][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:44,436][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:44,437][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 194
[2016-09-19 10:45:44,437][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:45:44,437][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:45:45,041][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:45:45,042][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:47,440][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:47,952][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 195) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:47,953][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:47,954][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 195
[2016-09-19 10:45:47,955][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:47,956][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:51,471][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 196) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:51,471][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:51,472][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:51,473][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 196
[2016-09-19 10:45:51,473][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:51,474][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:54,987][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 197) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:54,988][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:54,990][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 197
[2016-09-19 10:45:54,991][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:54,992][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:45:58,506][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 198) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:45:58,506][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:45:58,507][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:45:58,508][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 198
[2016-09-19 10:45:58,509][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:45:58,509][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:02,022][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 199) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:02,023][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:02,025][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 199
[2016-09-19 10:46:02,025][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:02,026][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:05,540][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 200) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:05,541][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:05,542][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:05,543][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 200
[2016-09-19 10:46:05,543][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:05,544][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:09,058][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 201) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:09,058][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:09,060][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 201
[2016-09-19 10:46:09,061][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:09,061][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:12,576][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 202) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:12,576][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:12,577][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:12,578][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 202
[2016-09-19 10:46:12,578][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:12,579][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:16,094][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 203) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:16,094][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:16,096][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 203
[2016-09-19 10:46:16,096][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:16,097][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:19,612][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 204) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:19,612][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:19,614][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:19,614][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 204
[2016-09-19 10:46:19,615][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:19,615][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:23,130][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 205) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:23,131][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:23,135][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 205
[2016-09-19 10:46:23,136][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:23,138][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:26,650][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 206) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:26,651][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:26,652][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:26,653][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 206
[2016-09-19 10:46:26,653][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:26,654][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:30,165][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 207) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:30,166][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:30,167][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 207
[2016-09-19 10:46:30,168][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:30,168][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:33,683][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 208) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:33,683][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:33,684][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:33,685][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 208
[2016-09-19 10:46:33,685][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:33,686][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:37,201][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 209) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:37,201][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:37,203][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 209
[2016-09-19 10:46:37,204][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:37,204][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:40,718][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 210) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:40,719][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:40,720][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:40,721][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 210
[2016-09-19 10:46:40,721][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:40,722][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:44,237][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 211) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:44,237][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:44,239][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 211
[2016-09-19 10:46:44,239][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:44,240][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:47,755][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 212) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:47,755][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:47,756][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:47,757][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 212
[2016-09-19 10:46:47,757][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:47,758][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:51,278][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 213) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:51,279][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:51,280][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 213
[2016-09-19 10:46:51,281][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:51,282][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:54,797][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 214) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:54,797][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:54,799][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:46:54,799][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 214
[2016-09-19 10:46:54,800][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:54,801][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:46:58,317][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 215) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:46:58,317][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:46:58,319][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 215
[2016-09-19 10:46:58,319][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:46:58,320][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:01,835][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 216) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:01,835][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:01,836][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:01,837][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 216
[2016-09-19 10:47:01,837][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:01,838][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:05,353][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 217) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:05,353][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:05,355][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 217
[2016-09-19 10:47:05,355][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:05,356][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:08,870][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 218) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:08,870][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:08,872][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:08,872][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 218
[2016-09-19 10:47:08,873][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:08,873][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:12,388][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 219) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:12,388][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:12,390][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 219
[2016-09-19 10:47:12,391][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:12,391][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:15,905][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 220) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:15,905][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:15,907][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:15,907][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 220
[2016-09-19 10:47:15,908][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:15,909][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:19,422][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 221) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:19,423][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:19,424][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 221
[2016-09-19 10:47:19,425][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:19,425][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:22,940][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 222) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:22,940][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:22,941][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:22,942][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 222
[2016-09-19 10:47:22,943][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:22,943][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:26,458][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 223) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:26,459][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:26,460][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 223
[2016-09-19 10:47:26,461][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:26,461][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:29,977][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 224) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:29,977][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:29,978][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:29,979][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 224
[2016-09-19 10:47:29,979][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:47:29,979][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:30,684][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:30,684][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:32,982][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:33,496][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 225) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:33,497][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:33,500][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 225
[2016-09-19 10:47:33,501][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:33,502][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:37,014][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 226) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:37,014][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:37,016][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:37,017][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 226
[2016-09-19 10:47:37,018][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:37,018][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:40,533][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 227) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:40,533][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:40,535][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 227
[2016-09-19 10:47:40,536][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:40,536][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:44,050][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 228) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:44,051][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:44,052][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:47:44,053][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 228
[2016-09-19 10:47:44,053][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:47:44,053][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:44,758][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:44,758][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:47,055][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:47,568][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 229) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:47,569][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:47,570][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 229
[2016-09-19 10:47:47,571][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:47:47,571][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:48,175][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:47:48,175][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:47:50,575][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:47:51,087][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 230) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:47:51,087][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:47:51,089][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 230
[2016-09-19 10:47:51,090][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:47:51,090][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:50:12,545][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:50:12,546][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:50:12,647][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:13,047][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:50:13,047][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:33,520][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 231) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:33,520][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:33,521][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:50:33,522][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 231
[2016-09-19 10:50:33,523][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:33,523][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:37,038][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 232) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:37,039][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:37,040][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 232
[2016-09-19 10:50:37,041][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:37,041][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:40,558][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 233) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:40,559][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:40,560][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:50:40,561][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 233
[2016-09-19 10:50:40,561][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:40,562][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:44,076][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 234) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:44,076][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:44,077][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 234
[2016-09-19 10:50:44,078][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:44,079][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:47,592][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 235) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:47,593][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:47,594][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:50:47,594][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 235
[2016-09-19 10:50:47,595][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:47,596][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:51,111][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 236) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:51,111][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:51,113][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 236
[2016-09-19 10:50:51,113][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:51,114][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:54,629][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 237) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:54,629][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:54,630][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:50:54,631][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 237
[2016-09-19 10:50:54,632][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:54,632][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:50:58,146][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 238) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:50:58,147][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:50:58,148][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 238
[2016-09-19 10:50:58,149][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:50:58,150][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:01,664][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 239) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:01,665][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:01,666][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:01,666][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 239
[2016-09-19 10:51:01,667][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:01,667][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:05,180][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 240) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:05,180][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:05,182][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 240
[2016-09-19 10:51:05,183][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:05,183][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:08,699][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 241) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:08,699][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:08,700][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:08,702][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 241
[2016-09-19 10:51:08,702][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:08,703][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:12,220][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 242) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:12,220][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:12,222][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 242
[2016-09-19 10:51:12,222][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:12,223][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:15,736][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 243) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:15,737][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:15,738][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:15,738][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 243
[2016-09-19 10:51:15,738][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:51:15,739][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:16,444][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:16,444][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:18,740][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:19,253][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 244) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:19,254][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:19,255][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 244
[2016-09-19 10:51:19,256][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:19,257][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:22,776][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 245) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:22,776][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:22,777][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:22,778][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 245
[2016-09-19 10:51:22,779][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:22,779][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:26,295][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 246) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:26,295][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:26,298][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 246
[2016-09-19 10:51:26,299][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:26,300][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:29,812][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 247) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:29,812][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:29,813][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:29,814][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 247
[2016-09-19 10:51:29,815][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:29,815][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:33,331][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 248) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:33,331][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:33,333][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 248
[2016-09-19 10:51:33,334][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:33,335][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:36,849][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 249) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:36,850][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:36,851][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:36,852][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 249
[2016-09-19 10:51:36,852][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:51:36,852][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:37,557][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:37,557][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:39,855][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:40,368][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 250) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:40,369][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:40,373][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 250
[2016-09-19 10:51:40,374][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:40,374][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:43,884][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 251) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:43,884][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:43,885][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:43,886][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 251
[2016-09-19 10:51:43,887][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:43,887][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:47,401][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 252) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:47,401][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:47,402][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 252
[2016-09-19 10:51:47,403][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:47,403][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:50,918][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 253) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:50,918][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:50,919][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:51:50,920][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 253
[2016-09-19 10:51:50,921][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:50,921][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:54,436][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 254) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:54,436][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:54,438][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 254
[2016-09-19 10:51:54,438][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:51:54,438][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:55,043][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:51:55,043][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:51:57,440][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:51:57,955][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 255) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:51:57,955][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:51:57,956][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 255
[2016-09-19 10:51:57,957][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:51:57,957][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:55:25,133][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 10:55:25,133][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 10:55:25,235][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:55:25,635][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:55:25,635][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:55:46,109][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 256) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:55:46,110][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:55:46,111][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:55:46,112][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 256
[2016-09-19 10:55:46,112][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:55:46,113][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:55:49,629][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 257) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:55:49,630][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:55:49,631][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 257
[2016-09-19 10:55:49,632][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:55:49,632][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:55:53,149][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 258) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:55:53,149][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:55:53,150][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:55:53,151][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 258
[2016-09-19 10:55:53,152][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:55:53,152][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:55:56,666][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 259) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:55:56,666][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:55:56,671][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 259
[2016-09-19 10:55:56,672][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:55:56,672][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:00,183][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 260) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:00,183][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:00,184][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:56:00,185][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 260
[2016-09-19 10:56:00,186][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:00,186][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:03,702][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 261) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:03,702][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:03,704][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 261
[2016-09-19 10:56:03,704][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:03,705][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:07,219][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 262) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:07,219][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:07,220][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:56:07,221][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 262
[2016-09-19 10:56:07,221][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:56:07,221][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:07,926][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:07,926][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:10,224][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:10,739][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 263) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:10,739][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:10,741][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 263
[2016-09-19 10:56:10,741][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:10,742][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:14,256][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 264) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:14,256][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:14,257][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:56:14,258][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 264
[2016-09-19 10:56:14,259][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:14,259][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:17,774][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 265) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:17,774][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:17,776][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 265
[2016-09-19 10:56:17,776][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:17,777][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:21,291][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 266) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:21,291][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:21,292][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:56:21,293][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 266
[2016-09-19 10:56:21,293][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:21,294][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:24,809][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 267) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:24,810][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:24,812][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 267
[2016-09-19 10:56:24,812][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:24,813][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:28,328][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 268) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:28,328][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:28,329][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 10:56:28,329][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 268
[2016-09-19 10:56:28,330][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:56:28,330][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:29,034][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:29,034][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:31,333][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:31,848][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 269) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:31,849][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:31,850][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 269
[2016-09-19 10:56:31,851][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:56:31,851][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:32,554][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 10:56:32,555][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 10:56:34,853][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 10:56:35,366][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 270) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 10:56:35,366][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 10:56:35,368][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 270
[2016-09-19 10:56:35,368][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 10:56:35,368][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:00:35,665][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:00:35,665][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:00:35,766][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:00:36,167][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:00:36,168][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:00:59,649][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 271) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:00:59,649][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:00:59,650][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:00:59,651][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 271
[2016-09-19 11:00:59,651][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:00:59,652][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:03,167][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 272) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:03,167][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:03,169][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 272
[2016-09-19 11:01:03,170][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:03,170][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:06,685][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 273) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:06,685][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:06,686][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:06,687][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 273
[2016-09-19 11:01:06,687][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:06,688][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:10,204][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 274) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:10,204][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:10,206][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 274
[2016-09-19 11:01:10,206][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:10,207][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:13,722][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 275) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:13,722][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:13,723][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:13,724][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 275
[2016-09-19 11:01:13,724][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:13,725][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:17,239][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 276) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:17,239][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:17,241][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 276
[2016-09-19 11:01:17,242][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:17,242][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:20,756][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 277) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:20,756][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:20,757][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:20,757][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 277
[2016-09-19 11:01:20,758][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:01:20,758][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:01:21,462][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:01:21,462][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:23,759][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:24,275][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 278) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:24,275][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:24,277][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 278
[2016-09-19 11:01:24,277][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:24,278][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:27,794][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 279) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:27,794][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:27,795][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:27,796][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 279
[2016-09-19 11:01:27,797][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:27,798][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:31,312][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 280) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:31,313][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:31,314][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 280
[2016-09-19 11:01:31,315][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:31,315][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:34,827][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 281) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:34,828][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:34,829][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:34,830][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 281
[2016-09-19 11:01:34,830][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:34,831][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:38,348][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 282) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:38,348][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:38,351][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 282
[2016-09-19 11:01:38,352][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:38,353][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:41,864][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 283) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:41,864][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:41,865][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:41,865][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 283
[2016-09-19 11:01:41,865][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:01:41,866][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:01:42,569][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:01:42,569][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:44,868][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:45,381][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 284) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:45,381][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:45,383][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 284
[2016-09-19 11:01:45,383][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:45,384][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:48,898][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 285) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:48,899][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:48,900][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:48,901][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 285
[2016-09-19 11:01:48,901][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:48,902][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:52,416][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 286) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:52,417][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:52,418][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 286
[2016-09-19 11:01:52,419][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:52,419][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:55,934][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 287) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:55,934][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:55,935][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:01:55,936][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 287
[2016-09-19 11:01:55,936][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:55,937][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:01:59,452][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 288) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:01:59,452][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:01:59,453][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 288
[2016-09-19 11:01:59,454][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:01:59,455][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:02,970][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 289) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:02,970][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:02,971][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:02,972][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 289
[2016-09-19 11:02:02,972][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:02,973][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:06,487][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 290) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:06,487][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:06,489][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 290
[2016-09-19 11:02:06,490][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:06,490][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:10,006][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 291) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:10,006][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:10,007][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:10,008][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 291
[2016-09-19 11:02:10,008][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:02:10,008][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:10,713][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:10,713][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:13,011][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:13,523][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 292) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:13,523][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:13,525][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 292
[2016-09-19 11:02:13,526][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:13,526][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:17,042][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 293) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:17,042][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:17,043][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:17,044][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 293
[2016-09-19 11:02:17,045][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:17,045][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:20,560][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 294) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:20,560][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:20,562][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 294
[2016-09-19 11:02:20,563][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:20,563][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:24,077][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 295) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:24,077][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:24,078][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:24,078][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 295
[2016-09-19 11:02:24,079][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:02:24,079][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:24,784][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:24,784][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:27,081][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:27,594][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 296) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:27,594][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:27,596][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 296
[2016-09-19 11:02:27,596][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:27,597][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:31,110][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 297) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:31,110][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:31,111][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:31,112][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 297
[2016-09-19 11:02:31,113][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:31,113][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:34,630][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 298) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:34,630][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:34,632][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 298
[2016-09-19 11:02:34,632][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:34,633][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:38,149][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 299) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:38,149][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:38,150][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:38,151][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 299
[2016-09-19 11:02:38,151][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:38,152][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:41,668][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 300) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:41,668][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:41,669][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 300
[2016-09-19 11:02:41,670][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:41,670][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:45,186][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 301) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:45,186][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:45,188][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:45,188][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 301
[2016-09-19 11:02:45,189][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:45,189][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:48,705][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 302) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:48,705][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:48,707][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 302
[2016-09-19 11:02:48,708][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:48,708][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:52,221][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 303) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:52,222][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:52,223][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:52,224][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 303
[2016-09-19 11:02:52,224][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:52,225][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:55,739][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 304) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:55,740][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:55,741][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 304
[2016-09-19 11:02:55,742][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:02:55,742][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:02:59,258][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 305) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:02:59,258][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:02:59,259][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:02:59,260][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 305
[2016-09-19 11:02:59,260][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:02:59,261][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:59,964][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:02:59,964][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:02,264][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:02,779][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 306) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:02,779][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:02,780][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 306
[2016-09-19 11:03:02,781][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:02,782][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:06,296][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 307) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:06,297][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:06,298][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:06,299][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 307
[2016-09-19 11:03:06,299][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:06,300][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:09,815][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 308) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:09,815][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:09,817][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 308
[2016-09-19 11:03:09,817][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:09,818][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:13,333][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 309) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:13,334][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:13,335][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:13,336][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 309
[2016-09-19 11:03:13,336][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:13,337][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:16,852][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 310) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:16,852][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:16,854][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 310
[2016-09-19 11:03:16,855][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:16,855][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:20,369][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 311) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:20,369][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:20,370][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:20,370][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 311
[2016-09-19 11:03:20,371][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:03:20,371][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:21,076][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:21,076][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:23,374][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:23,885][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 312) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:23,885][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:23,887][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 312
[2016-09-19 11:03:23,888][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:23,888][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:27,404][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 313) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:27,404][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:27,405][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:27,406][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 313
[2016-09-19 11:03:27,406][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:27,407][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:30,921][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 314) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:30,922][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:30,923][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 314
[2016-09-19 11:03:30,924][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:30,924][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:34,439][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 315) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:34,439][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:34,440][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:34,441][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 315
[2016-09-19 11:03:34,442][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:34,443][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:37,956][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 316) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:37,956][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:37,958][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 316
[2016-09-19 11:03:37,958][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:37,959][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:41,472][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 317) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:41,473][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:41,474][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:41,474][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 317
[2016-09-19 11:03:41,474][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:03:41,474][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:42,179][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:42,179][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:44,475][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:44,990][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 318) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:44,990][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:44,992][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 318
[2016-09-19 11:03:44,992][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:44,993][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:48,506][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 319) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:48,506][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:48,507][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:48,508][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 319
[2016-09-19 11:03:48,508][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:48,509][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:52,024][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 320) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:52,024][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:52,026][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 320
[2016-09-19 11:03:52,026][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:52,027][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:55,541][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 321) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:55,542][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:55,543][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:03:55,544][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 321
[2016-09-19 11:03:55,544][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:03:55,544][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:56,249][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:03:56,249][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:58,545][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:03:59,061][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 322) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:03:59,061][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:03:59,063][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 322
[2016-09-19 11:03:59,063][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:03:59,064][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:02,579][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 323) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:02,580][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:02,581][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:02,581][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 323
[2016-09-19 11:04:02,581][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:02,581][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:03,185][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:03,185][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:05,584][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:06,099][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 324) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:06,099][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:06,104][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 324
[2016-09-19 11:04:06,104][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:06,105][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:09,615][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 325) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:09,616][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:09,617][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:09,617][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 325
[2016-09-19 11:04:09,617][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:09,617][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:10,321][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:10,322][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:12,619][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:13,132][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 326) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:13,132][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:13,134][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 326
[2016-09-19 11:04:13,135][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:13,135][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:16,649][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 327) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:16,649][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:16,650][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:16,651][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 327
[2016-09-19 11:04:16,651][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:16,651][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:17,356][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:17,356][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:19,654][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:20,167][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 328) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:20,168][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:20,169][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 328
[2016-09-19 11:04:20,170][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:20,170][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:23,685][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 329) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:23,685][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:23,686][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:23,687][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 329
[2016-09-19 11:04:23,688][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:23,689][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:27,203][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 330) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:27,204][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:27,205][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 330
[2016-09-19 11:04:27,206][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:27,206][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:30,722][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 331) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:30,722][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:30,723][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:30,724][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 331
[2016-09-19 11:04:30,725][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:30,725][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:34,240][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 332) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:34,240][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:34,242][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 332
[2016-09-19 11:04:34,243][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:34,243][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:37,759][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 333) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:37,759][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:37,760][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:37,761][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 333
[2016-09-19 11:04:37,761][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:37,762][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:41,276][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 334) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:41,276][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:41,278][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 334
[2016-09-19 11:04:41,279][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:41,279][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:44,795][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 335) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:44,795][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:44,796][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:44,796][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 335
[2016-09-19 11:04:44,797][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:44,797][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:45,502][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:45,502][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:47,800][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:48,313][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 336) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:48,313][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:48,315][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 336
[2016-09-19 11:04:48,315][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:48,316][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:51,829][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 337) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:51,830][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:51,831][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:51,831][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 337
[2016-09-19 11:04:51,832][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:51,832][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:52,536][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:52,537][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:54,835][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:55,348][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 338) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:55,348][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:55,350][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 338
[2016-09-19 11:04:55,350][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:04:55,351][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:04:58,867][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 339) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:04:58,867][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:04:58,868][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:04:58,869][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 339
[2016-09-19 11:04:58,869][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:04:58,869][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:59,573][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:04:59,573][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:01,871][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:02,385][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 340) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:02,385][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:02,388][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 340
[2016-09-19 11:05:02,388][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:02,389][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:05,901][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 341) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:05,901][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:05,902][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:05,903][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 341
[2016-09-19 11:05:05,903][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:05,904][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:09,417][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 342) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:09,417][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:09,418][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 342
[2016-09-19 11:05:09,419][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:09,419][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:12,934][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 343) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:12,935][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:12,936][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:12,937][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 343
[2016-09-19 11:05:12,938][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:12,938][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:16,453][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 344) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:16,453][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:16,455][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 344
[2016-09-19 11:05:16,456][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:16,456][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:19,971][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 345) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:19,972][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:19,973][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:19,973][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 345
[2016-09-19 11:05:19,974][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:19,975][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:23,489][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 346) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:23,489][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:23,491][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 346
[2016-09-19 11:05:23,491][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:23,492][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:27,006][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 347) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:27,007][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:27,008][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:27,008][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 347
[2016-09-19 11:05:27,009][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:27,010][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:30,524][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 348) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:30,524][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:30,526][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 348
[2016-09-19 11:05:30,527][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:30,527][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:34,043][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 349) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:34,043][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:34,044][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:34,044][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 349
[2016-09-19 11:05:34,045][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:05:34,045][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:05:34,749][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:05:34,749][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:37,048][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:37,560][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 350) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:37,561][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:37,562][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 350
[2016-09-19 11:05:37,563][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:37,563][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:05:41,078][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 351) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:05:41,079][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:05:41,080][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:05:41,080][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 351
[2016-09-19 11:05:41,081][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:05:41,082][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:06:11,082][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 352) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:06:11,082][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:06:11,084][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:06:11,088][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 352
[2016-09-19 11:06:11,089][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:06:11,090][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:10:59,527][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:10:59,527][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:10:59,628][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:11:00,030][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:11:00,030][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:11:23,512][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 353) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:11:23,512][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:11:23,513][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:11:23,514][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 353
[2016-09-19 11:11:23,514][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:11:23,514][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:16:11,959][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:16:11,959][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:16:12,061][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:16:12,462][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:16:12,462][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:16:34,437][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 354) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:16:34,437][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:16:34,439][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:16:34,440][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 354
[2016-09-19 11:16:34,440][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:16:34,440][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:21:25,890][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:21:25,890][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:21:25,991][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:21:26,392][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:21:26,393][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:21:46,861][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 355) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:21:46,862][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:21:46,863][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:21:46,863][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 355
[2016-09-19 11:21:46,864][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:21:46,864][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:26:38,309][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:26:38,310][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:26:38,411][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:26:38,811][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:26:38,811][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:26:59,286][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 356) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:26:59,286][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:26:59,287][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:26:59,288][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 356
[2016-09-19 11:26:59,288][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:26:59,288][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:31:47,749][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:31:47,749][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:31:47,850][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:31:48,251][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:31:48,251][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:32:10,230][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 357) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:32:10,230][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:32:10,231][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:32:10,232][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 357
[2016-09-19 11:32:10,232][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:32:10,233][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:37:01,713][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:37:01,713][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:37:01,814][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:37:02,215][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:37:02,216][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:37:22,687][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 358) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:37:22,687][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:37:22,694][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:37:22,695][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 358
[2016-09-19 11:37:22,695][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:37:22,696][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:42:14,141][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:42:14,141][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:42:14,243][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:42:14,643][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:42:14,643][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:42:35,121][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 359) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:42:35,121][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:42:35,122][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:42:35,123][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 359
[2016-09-19 11:42:35,123][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:42:35,123][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:47:26,551][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:47:26,551][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:47:26,653][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:47:27,054][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:47:27,054][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:47:47,529][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 360) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:47:47,529][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:47:47,530][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:47:47,531][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 360
[2016-09-19 11:47:47,531][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:47:47,532][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:52:35,964][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:52:35,964][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:52:36,065][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:52:36,466][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:52:36,466][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:52:58,445][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 361) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:52:58,445][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:52:58,447][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:52:58,447][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 361
[2016-09-19 11:52:58,448][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:52:58,448][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:57:49,874][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 11:57:49,874][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 11:57:49,975][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 11:57:50,376][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 11:57:50,377][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 11:58:10,847][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 362) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 11:58:10,847][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 11:58:10,848][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 11:58:10,849][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 362
[2016-09-19 11:58:10,849][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 11:58:10,849][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:03:02,292][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:03:02,292][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:03:02,393][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:03:02,795][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:03:02,795][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:03:23,267][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 363) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:03:23,267][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:03:23,269][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:03:23,269][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 363
[2016-09-19 12:03:23,269][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:03:23,270][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:08:14,708][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:08:14,708][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:08:14,810][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:08:15,211][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:08:15,211][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:08:35,682][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 364) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:08:35,682][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:08:35,683][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:08:35,684][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 364
[2016-09-19 12:08:35,684][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:08:35,684][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:13:24,109][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:13:24,109][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:13:24,210][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:13:24,612][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:13:24,612][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:13:46,587][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 365) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:13:46,588][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:13:46,589][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:13:46,590][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 365
[2016-09-19 12:13:46,590][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:13:46,590][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:18:38,031][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:18:38,031][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:18:38,132][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:18:38,534][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:18:38,534][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:18:59,018][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 366) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:18:59,018][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:18:59,019][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:18:59,020][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 366
[2016-09-19 12:18:59,020][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:18:59,021][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:23:47,450][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:23:47,450][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:23:47,551][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:23:47,951][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:23:47,951][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:24:11,434][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 367) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:24:11,435][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:24:11,436][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:24:11,436][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 367
[2016-09-19 12:24:11,437][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:24:11,437][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:28:59,855][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:28:59,855][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:28:59,956][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:29:00,357][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:29:00,357][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:29:23,834][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 368) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:29:23,834][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:29:23,835][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:29:23,837][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 368
[2016-09-19 12:29:23,837][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:29:23,837][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:34:12,245][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:34:12,245][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:34:12,346][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:34:12,745][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:34:12,746][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:34:34,724][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 369) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:34:34,724][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:34:34,725][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:34:34,726][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 369
[2016-09-19 12:34:34,726][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:34:34,727][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:39:26,180][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:39:26,180][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:39:26,281][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:39:26,682][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:39:26,683][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:39:47,162][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 370) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:39:47,162][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:39:47,171][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:39:47,172][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 370
[2016-09-19 12:39:47,172][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:39:47,172][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:44:38,600][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:44:38,600][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:44:38,702][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:44:39,103][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:44:39,103][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:44:59,584][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 371) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:44:59,584][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:44:59,585][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:44:59,586][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 371
[2016-09-19 12:44:59,586][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:44:59,586][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:49:47,997][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:49:47,997][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:49:48,098][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:49:48,499][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:49:48,499][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:50:10,475][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 372) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:50:10,476][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:50:10,477][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:50:10,478][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 372
[2016-09-19 12:50:10,478][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:50:10,478][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:55:01,887][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 12:55:01,887][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 12:55:01,988][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 12:55:02,389][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 12:55:02,390][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 12:55:22,865][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 373) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 12:55:22,865][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 12:55:22,866][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 12:55:22,867][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 373
[2016-09-19 12:55:22,867][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 12:55:22,867][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:00:14,277][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:00:14,277][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:00:14,379][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:00:14,780][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:00:14,780][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:00:35,249][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 374) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:00:35,250][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:00:35,251][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:00:35,252][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 374
[2016-09-19 13:00:35,252][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:00:35,252][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:05:26,676][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:05:26,676][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:05:26,777][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:05:27,178][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:05:27,178][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:05:47,649][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 375) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:05:47,650][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:05:47,651][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:05:47,652][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 375
[2016-09-19 13:05:47,652][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:05:47,652][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:10:39,082][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:10:39,082][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:10:39,183][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:10:39,584][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:10:39,584][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:11:00,056][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 376) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:11:00,056][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:11:00,057][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:11:00,058][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 376
[2016-09-19 13:11:00,059][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:11:00,059][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:15:48,470][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:15:48,470][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:15:48,571][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:15:48,974][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:15:48,974][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:16:10,946][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 377) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:16:10,946][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:16:10,947][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:16:10,948][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 377
[2016-09-19 13:16:10,948][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:16:10,948][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:21:02,363][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:21:02,363][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:21:02,464][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:21:02,865][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:21:02,866][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:21:23,342][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 378) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:21:23,342][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:21:23,343][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:21:23,344][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 378
[2016-09-19 13:21:23,344][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:21:23,344][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:26:11,764][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:26:11,766][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:26:11,866][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:26:12,267][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:26:12,268][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:26:35,746][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 379) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:26:35,746][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:26:35,747][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:26:35,748][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 379
[2016-09-19 13:26:35,748][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:26:35,749][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:31:24,148][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:31:24,148][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:31:24,249][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:31:24,651][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:31:24,651][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:31:48,135][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 380) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:31:48,135][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:31:48,136][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:31:48,137][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 380
[2016-09-19 13:31:48,137][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:31:48,138][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:36:36,549][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:36:36,549][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:36:36,650][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:36:37,050][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:36:37,050][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:36:59,030][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 381) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:36:59,031][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:36:59,032][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:36:59,039][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 381
[2016-09-19 13:36:59,040][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:36:59,040][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:41:50,488][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:41:50,488][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:41:50,589][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:41:50,990][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:41:50,990][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:42:11,464][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 382) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:42:11,464][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:42:11,472][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:42:11,473][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 382
[2016-09-19 13:42:11,473][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:42:11,473][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:47:02,884][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:47:02,885][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:47:02,986][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:47:03,386][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:47:03,386][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:47:23,856][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 383) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:47:23,856][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:47:23,857][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:47:23,858][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 383
[2016-09-19 13:47:23,858][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:47:23,859][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:52:12,263][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:52:12,263][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:52:12,364][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:52:12,765][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:52:12,765][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:52:36,244][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 384) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:52:36,244][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:52:36,246][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:52:36,247][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 384
[2016-09-19 13:52:36,247][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:52:36,247][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:57:24,652][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 13:57:24,652][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 13:57:24,754][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 13:57:25,155][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 13:57:25,155][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 13:57:47,131][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 385) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 13:57:47,131][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 13:57:47,132][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 13:57:47,133][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 385
[2016-09-19 13:57:47,133][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 13:57:47,133][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:02:38,552][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:02:38,552][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:02:38,654][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:02:39,055][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:02:39,055][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:02:59,525][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 386) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:02:59,525][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:02:59,527][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:02:59,533][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 386
[2016-09-19 14:02:59,534][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:02:59,534][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:07:47,940][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:07:47,940][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:07:48,041][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:07:48,442][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:07:48,442][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:08:10,412][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 387) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:08:10,412][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:08:10,414][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:08:10,414][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 387
[2016-09-19 14:08:10,414][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:08:10,415][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:13:01,836][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:13:01,837][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:13:01,938][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:13:02,338][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:13:02,339][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:13:22,812][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 388) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:13:22,813][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:13:22,814][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:13:22,814][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 388
[2016-09-19 14:13:22,815][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:13:22,815][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:18:14,215][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:18:14,215][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:18:14,316][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:18:14,717][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:18:14,718][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:18:35,193][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 389) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:18:35,193][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:18:35,194][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:18:35,195][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 389
[2016-09-19 14:18:35,195][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:18:35,196][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:23:26,608][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:23:26,608][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:23:26,709][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:23:27,110][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:23:27,110][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:23:47,582][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 390) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:23:47,583][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:23:47,584][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:23:47,584][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 390
[2016-09-19 14:23:47,585][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:23:47,585][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:28:38,998][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:28:38,998][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:28:39,100][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:28:39,500][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:28:39,500][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:28:59,971][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 391) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:28:59,971][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:28:59,972][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:28:59,973][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 391
[2016-09-19 14:28:59,973][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:28:59,974][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:33:48,367][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:33:48,367][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:33:48,468][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:33:48,869][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:33:48,870][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:34:10,844][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 392) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:34:10,845][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:34:10,846][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:34:10,846][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 392
[2016-09-19 14:34:10,846][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:34:10,847][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:39:02,282][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:39:02,283][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:39:02,384][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:39:02,784][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:39:02,784][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:39:23,255][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 393) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:39:23,255][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:39:23,256][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:39:23,257][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 393
[2016-09-19 14:39:23,257][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:39:23,257][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:44:14,670][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:44:14,670][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:44:14,772][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:44:15,173][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:44:15,173][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:44:35,646][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 394) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:44:35,646][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:44:35,653][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:44:35,654][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 394
[2016-09-19 14:44:35,654][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:44:35,654][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:49:27,069][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:49:27,069][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:49:27,171][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:49:27,572][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:49:27,572][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:49:48,046][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 395) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:49:48,047][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:49:48,048][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:49:48,048][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 395
[2016-09-19 14:49:48,049][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:49:48,049][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:54:36,452][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:54:36,452][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:54:36,553][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:54:36,953][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:54:36,954][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 14:55:00,442][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 396) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 14:55:00,442][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 14:55:00,443][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 14:55:00,444][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 396
[2016-09-19 14:55:00,444][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 14:55:00,444][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:59:48,851][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 14:59:48,851][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 14:59:48,952][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 14:59:49,353][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 14:59:49,353][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:00:11,332][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 397) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:00:11,332][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:00:11,334][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:00:11,334][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 397
[2016-09-19 15:00:11,335][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:00:11,335][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:05:02,747][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:05:02,748][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:05:02,849][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:05:03,249][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:05:03,249][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:05:23,725][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 398) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:05:23,726][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:05:23,727][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:05:23,727][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 398
[2016-09-19 15:05:23,728][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:05:23,728][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:10:15,141][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:10:15,142][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:10:15,243][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:10:15,643][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:10:15,643][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:10:36,116][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 399) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:10:36,117][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:10:36,118][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:10:36,118][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 399
[2016-09-19 15:10:36,119][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:10:36,119][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:15:24,522][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:15:24,522][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:15:24,623][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:15:25,025][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:15:25,025][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:15:48,504][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 400) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:15:48,504][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:15:48,505][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:15:48,506][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 400
[2016-09-19 15:15:48,506][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:15:48,506][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:20:36,906][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:20:36,906][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:20:37,008][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:20:37,408][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:20:37,408][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:20:59,384][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 401) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:20:59,384][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:20:59,385][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:20:59,386][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 401
[2016-09-19 15:20:59,386][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:20:59,386][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:25:47,754][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:25:47,754][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:25:47,856][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:25:48,256][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:25:48,256][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
[2016-09-19 15:26:10,234][kafka.coordinator][INFO]Joined group 'kafka-python-default-group' (generation 402) with member_id kafka-python-1.3.1-d58b161d-5cd8-4276-b7af-b41e3779b465
[2016-09-19 15:26:10,234][kafka.coordinator][INFO]Elected group leader -- performing partition assignments using range
[2016-09-19 15:26:10,236][kafka.coordinator.consumer][WARNING]Auto offset commit failed for group kafka-python-default-group: CommitFailedError: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured session.timeout.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records.
[2016-09-19 15:26:10,236][kafka.coordinator][INFO]Successfully joined group kafka-python-default-group with generation 402
[2016-09-19 15:26:10,236][kafka.consumer.subscription_state][INFO]Updated partition assignment: [TopicPartition(topic=u'goodtopic', partition=0)]
[2016-09-19 15:26:10,237][kafka.coordinator.consumer][INFO]Setting newly assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:31:01,582][kafka.coordinator][WARNING]Heartbeat failed for group kafka-python-default-group because it is rebalancing
[2016-09-19 15:31:01,583][kafka.coordinator][WARNING]Heartbeat failed ([Error 27] RebalanceInProgressError: ); retrying
[2016-09-19 15:31:01,684][kafka.coordinator][INFO]Skipping heartbeat: no auto-assignment or waiting on rebalance
[2016-09-19 15:31:02,084][kafka.coordinator.consumer][INFO]Revoking previously assigned partitions set([TopicPartition(topic=u'goodtopic', partition=0)]) for group kafka-python-default-group
[2016-09-19 15:31:02,085][kafka.coordinator][INFO](Re-)joining group kafka-python-default-group
